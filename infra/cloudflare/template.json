{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string"
    },
    "networkInterfaceName1": {
      "type": "string"
    },
    "networkInterfaceName2": {
      "type": "string"
    },
    "networkInterfaceName3": {
      "type": "string"
    },
    "subnetName": {
      "type": "string"
    },
    "virtualNetworkId": {
      "type": "string"
    },
    "publicIpAddressName1": {
      "type": "string"
    },
    "publicIpAddressType": {
      "type": "string"
    },
    "publicIpAddressSku": {
      "type": "string"
    },
    "pipDeleteOption": {
      "type": "string"
    },
    "virtualMachineName": {
      "type": "string"
    },
    "virtualMachineName1": {
      "type": "string"
    },
    "virtualMachineComputerName1": {
      "type": "string"
    },
    "virtualMachineRG": {
      "type": "string"
    },
    "osDiskType": {
      "type": "string"
    },
    "osDiskDeleteOption": {
      "type": "string"
    },
    "virtualMachineSize": {
      "type": "string"
    },
    "nicDeleteOption": {
      "type": "string"
    },
    "hibernationEnabled": {
      "type": "bool"
    },
    "adminUsername": {
      "type": "string"
    },
    "virtualMachineName2": {
      "type": "string"
    },
    "virtualMachineComputerName2": {
      "type": "string"
    },
    "virtualMachineName3": {
      "type": "string"
    },
    "virtualMachineComputerName3": {
      "type": "string"
    },
    "virtualMachine1Zone": {
      "type": "string"
    },
    "virtualMachine2Zone": {
      "type": "string"
    },
    "virtualMachine3Zone": {
      "type": "string"
    }
  },
  "variables": {
    "vnetId": "[parameters('virtualNetworkId')]",
    "vnetName": "[last(split(variables('vnetId'), '/'))]",
    "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]"
  },
  "resources": [
    {
      "name": "[parameters('networkInterfaceName1')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName1'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIpAddress": {
                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName1'))]",
                "properties": {
                  "deleteOption": "[parameters('pipDeleteOption')]"
                }
              }
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('networkInterfaceName2')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('networkInterfaceName3')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2022-11-01",
      "location": "[parameters('location')]",
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetRef')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('publicIpAddressName1')]",
      "type": "Microsoft.Network/publicIpAddresses",
      "apiVersion": "2020-08-01",
      "location": "[parameters('location')]",
      "properties": {
        "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
      },
      "sku": {
        "name": "[parameters('publicIpAddressSku')]"
      },
      "zones": ["1", "2", "3"]
    },
    {
      "name": "[parameters('virtualMachineName1')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName1'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "deleteOption": "[parameters('osDiskDeleteOption')]"
          },
          "imageReference": {
            "publisher": "cloudflare",
            "offer": "cloudflare_tunnel_vm",
            "sku": "cloudflare_tunnel_vm",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName1'))]",
              "properties": {
                "deleteOption": "[parameters('nicDeleteOption')]"
              }
            }
          ]
        },
        "securityProfile": {},
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineComputerName1')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true
          }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "plan": {
        "name": "cloudflare_tunnel_vm",
        "publisher": "cloudflare",
        "product": "cloudflare_tunnel_vm"
      },
      "zones": ["[parameters('virtualMachine1Zone')]"]
    },
    {
      "name": "[parameters('virtualMachineName2')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName2'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "deleteOption": "[parameters('osDiskDeleteOption')]"
          },
          "imageReference": {
            "publisher": "cloudflare",
            "offer": "cloudflare_tunnel_vm",
            "sku": "cloudflare_tunnel_vm",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName2'))]",
              "properties": {
                "deleteOption": "[parameters('nicDeleteOption')]"
              }
            }
          ]
        },
        "securityProfile": {},
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineComputerName2')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true
          }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "plan": {
        "name": "cloudflare_tunnel_vm",
        "publisher": "cloudflare",
        "product": "cloudflare_tunnel_vm"
      },
      "zones": ["[parameters('virtualMachine2Zone')]"]
    },
    {
      "name": "[parameters('virtualMachineName3')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2024-03-01",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName3'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "fromImage",
            "managedDisk": {
              "storageAccountType": "[parameters('osDiskType')]"
            },
            "deleteOption": "[parameters('osDiskDeleteOption')]"
          },
          "imageReference": {
            "publisher": "cloudflare",
            "offer": "cloudflare_tunnel_vm",
            "sku": "cloudflare_tunnel_vm",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName3'))]",
              "properties": {
                "deleteOption": "[parameters('nicDeleteOption')]"
              }
            }
          ]
        },
        "securityProfile": {},
        "additionalCapabilities": {
          "hibernationEnabled": false
        },
        "osProfile": {
          "computerName": "[parameters('virtualMachineComputerName3')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true
          }
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true
          }
        }
      },
      "plan": {
        "name": "cloudflare_tunnel_vm",
        "publisher": "cloudflare",
        "product": "cloudflare_tunnel_vm"
      },
      "zones": ["[parameters('virtualMachine3Zone')]"]
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    }
  }
}
